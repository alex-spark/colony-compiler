var colony = require('..');
var buffertools = require('buffertools');

var code = 'console.log("hi")';
var cmp = new Buffer([27,76,117,97,81,0,1,4,4,4,8,0,13,0,0,0,64,117,115,101,114,99,111,100,101,46,106,115,0,0,0,0,0,0,0,0,0,0,0,2,2,3,0,0,0,0,0,0,36,0,0,0,30,0,0,1,30,0,128,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,9,0,0,0,0,2,0,12,11,0,0,0,198,1,192,0,0,2,128,0,69,66,0,0,75,130,192,4,193,194,0,0,92,130,128,1,90,2,0,0,22,192,255,127,70,2,192,0,94,2,0,1,30,0,128,0,4,0,0,0,4,8,0,0,0,101,120,112,111,114,116,115,0,4,8,0,0,0,99,111,110,115,111,108,101,0,4,4,0,0,0,108,111,103,0,4,3,0,0,0,104,105,0,0,0,0,0,11,0,0,0,0,4,0,0,0,4,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,8,0,0,0,8,0,0,0,9,0,0,0,9,0,0,0,5,0,0,0,95,69,78,86,0,0,0,0,0,10,0,0,0,8,0,0,0,95,109,111,100,117,108,101,0,0,0,0,0,10,0,0,0,7,0,0,0,115,116,114,105,110,103,0,0,0,0,0,10,0,0,0,5,0,0,0,109,97,116,104,0,0,0,0,0,10,0,0,0,6,0,0,0,112,114,105,110,116,0,0,0,0,0,10,0,0,0,5,0,0,0,116,121,112,101,0,0,0,0,0,10,0,0,0,6,0,0,0,112,97,105,114,115,0,0,0,0,0,10,0,0,0,8,0,0,0,101,120,112,111,114,116,115,0,2,0,0,0,10,0,0,0,7,0,0,0,109,111,100,117,108,101,0,2,0,0,0,10,0,0,0,0,0,0,0,3,0,0,0,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0]);

// colony.toBytecode(colony.colonize(code), function (err, buf) {
// 	console.log(buffertools.compare(cmp, buf));
// })

console.log('1..1')

colony.toBytecode(colony.colonize(code), function (err, bytecode) {
	var comparison = buffertools.compare(cmp, bytecode);
	console.log(comparison ? 'not ok' : 'ok', '- comparison delta ==', comparison);
});